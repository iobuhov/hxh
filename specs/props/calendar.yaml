ariaLabels:
  originalType: CalendarAriaLabels
  group: General
  caption: Aria Labels
  description: aria-label attributes for controls on different levels
columnsToScroll:
  originalType: number
  group: General
  caption: Columns To Scroll
  description: Number of columns to scroll with next/prev buttons, same as
    numberOfColumns if not set explicitly
date:
  originalType: string | Date
  group: General
  caption: Date
  description: Displayed date in controlled mode
decadeLabelFormat:
  originalType: "string | ((startOfDecade: string, endOfDecade: string) => ReactNode)"
  group: General
  caption: Decade Label Format
  description: dayjs format for decade label or a function that returns decade
    label based on the date value
  default: '"YYYY"'
defaultDate:
  originalType: string | Date
  group: General
  caption: Default Date
  description: Initial displayed date in uncontrolled mode
defaultLevel:
  originalType: '"month" | "year" | "decade"'
  group: General
  caption: Default Level
  description: Initial displayed level in uncontrolled mode
enableKeyboardNavigation:
  originalType: boolean
  group: General
  caption: Enable Keyboard Navigation
  description: Enable enhanced keyboard navigation (Ctrl/Cmd + Arrow keys for year
    navigation, Ctrl/Cmd + Shift + Arrow keys for decade navigation, Y key to
    open year view)
excludeDate:
  originalType: "((date: string) => boolean)"
  group: General
  caption: Exclude Date
  description: Callback function to determine whether the day should be disabled
firstDayOfWeek:
  originalType: 0 | 1 | 2 | 3 | 4 | 5 | 6
  group: General
  caption: First Day Of Week
  description: Number 0-6, where 0 – Sunday and 6 – Saturday.
  default: 1 – Monday
getDayAriaLabel:
  originalType: "((date: string) => string)"
  group: General
  caption: Get Day Aria Label
  description: Assigns aria-label to Day components based on date
getDayProps:
  originalType: '((date: string) => Omit<Partial<DayProps>, "classNames" |
    "styles" | "vars">)'
  group: General
  caption: Get Day Props
  description: Passes props down to Day components
getMonthControlProps:
  originalType: "((date: string) => Partial<PickerControlProps>)"
  group: General
  caption: Get Month Control Props
  description: Passes props down month picker control
getYearControlProps:
  originalType: "((date: string) => Partial<PickerControlProps>)"
  group: General
  caption: Get Year Control Props
  description: Passes props down to year picker control based on date
hasNextLevel:
  originalType: boolean
  group: General
  caption: Has Next Level
  description: Determines whether next level button should be enabled
  default: "true"
headerControlsOrder:
  originalType: ("next" | "previous" | "level")[]
  group: General
  caption: Header Controls Order
  description: Controls order
  default: "['previous', 'level', 'next']"
hideOutsideDates:
  originalType: boolean
  group: General
  caption: Hide Outside Dates
  description: Determines whether outside dates should be hidden
  default: "false"
hideWeekdays:
  originalType: boolean
  group: General
  caption: Hide Weekdays
  description: Determines whether weekdays row should be hidden
  default: "false"
highlightToday:
  originalType: boolean
  group: General
  caption: Highlight Today
  description: Determines whether today should be highlighted with a border
  default: "false"
level:
  originalType: '"month" | "year" | "decade"'
  group: General
  caption: Level
  description: Current displayed level displayed in controlled mode
locale:
  originalType: string
  group: General
  caption: Locale
  description: Dayjs locale, defaults to value defined in DatesProvider
maxDate:
  originalType: string | Date
  group: General
  caption: Max Date
  description: Maximum possible date in YYYY-MM-DD format or Date object
maxLevel:
  originalType: '"month" | "year" | "decade"'
  group: General
  caption: Max Level
  description: Max level that user can go up to (decade, year, month)
  default: "'decade'"
minDate:
  originalType: string | Date
  group: General
  caption: Min Date
  description: Minimum possible date in YYYY-MM-DD format or Date object
minLevel:
  originalType: '"month" | "year" | "decade"'
  group: General
  caption: Min Level
  description: Min level that user can go down to (decade, year, month)
  default: "'month'"
monthLabelFormat:
  originalType: "string | ((date: string) => string)"
  group: General
  caption: Month Label Format
  description: dayjs label format to display month label or a function that
    returns month label based on month value
  default: '"MMMM YYYY"'
monthsListFormat:
  originalType: string
  group: General
  caption: Months List Format
  description: dayjs format for months list
nextIcon:
  originalType: React.ReactNode
  group: General
  caption: Next Icon
  description: Change next icon
nextLabel:
  originalType: string
  group: General
  caption: Next Label
  description: Next button aria-label
numberOfColumns:
  originalType: number
  group: General
  caption: Number Of Columns
  description: Number of columns displayed next to each other
  default: "1"
onDateChange:
  originalType: "((date: string) => void)"
  group: General
  caption: On Date Change
  description: Called when date changes
onLevelChange:
  originalType: "((level: CalendarLevel) => void)"
  group: General
  caption: On Level Change
  description: Called when level changes
onMonthMouseEnter:
  originalType: "((event: MouseEvent<HTMLButtonElement, MouseEvent>, date: string) => void)"
  group: General
  caption: On Month Mouse Enter
  description: Called when mouse enters month control
onMonthSelect:
  originalType: "((date: string) => void)"
  group: General
  caption: On Month Select
  description: Called when user selects month
onNextDecade:
  originalType: "((date: string) => void)"
  group: General
  caption: On Next Decade
  description: Called when the next decade button is clicked
onNextMonth:
  originalType: "((date: string) => void)"
  group: General
  caption: On Next Month
  description: Called when the next month button is clicked
onNextYear:
  originalType: "((date: string) => void)"
  group: General
  caption: On Next Year
  description: Called when the next year button is clicked
onPreviousDecade:
  originalType: "((date: string) => void)"
  group: General
  caption: On Previous Decade
  description: Called when the previous decade button is clicked
onPreviousMonth:
  originalType: "((date: string) => void)"
  group: General
  caption: On Previous Month
  description: Called when the previous month button is clicked
onPreviousYear:
  originalType: "((date: string) => void)"
  group: General
  caption: On Previous Year
  description: Called when the previous year button is clicked
onYearMouseEnter:
  originalType: "((event: MouseEvent<HTMLButtonElement, MouseEvent>, date: string) => void)"
  group: General
  caption: On Year Mouse Enter
  description: Called when mouse enters year control
onYearSelect:
  originalType: "((date: string) => void)"
  group: General
  caption: On Year Select
  description: Called when user selects year
previousIcon:
  originalType: React.ReactNode
  group: General
  caption: Previous Icon
  description: Change previous icon
previousLabel:
  originalType: string
  group: General
  caption: Previous Label
  description: Previous button aria-label
renderDay:
  originalType: "(date: string) => React.ReactNode"
  group: General
  caption: Render Day
  description: Controls day value rendering
size:
  originalType: MantineSize
  group: General
  caption: Size
  description: Component size
static:
  originalType: boolean
  group: General
  caption: Static
  description: Determines whether days should be static, static days can be used
    to display month if it is not expected that user will interact with the
    component in any way
weekdayFormat:
  originalType: "string | ((date: string) => string)"
  group: General
  caption: Weekday Format
  description: dayjs format for weekdays names
  default: "'dd'"
weekendDays:
  originalType: (0 | 1 | 2 | 3 | 4 | 5 | 6)[]
  group: General
  caption: Weekend Days
  description: Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday.
    The default value is defined by DatesProvider.
withCellSpacing:
  originalType: boolean
  group: General
  caption: With Cell Spacing
  description: Determines whether controls should be separated
  default: "true"
withWeekNumbers:
  originalType: boolean
  group: General
  caption: With Week Numbers
  description: Determines whether week numbers should be displayed
  default: "false"
yearLabelFormat:
  originalType: "string | ((date: string) => string)"
  group: General
  caption: Year Label Format
  description: dayjs label format to display year label or a function that returns
    year label based on year value
  default: '"YYYY"'
yearsListFormat:
  originalType: string
  group: General
  caption: Years List Format
  description: dayjs format for years list
  default: "'YYYY'"
