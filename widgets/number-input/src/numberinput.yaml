allowDecimal:
  originalType: boolean
  group: General
  caption: Allow Decimal
  description: If set, decimal values are allowed
  default: "true"
allowLeadingZeros:
  originalType: boolean
  group: General
  caption: Allow Leading Zeros
  description: Determines whether leading zeros are allowed. If set to false,
    leading zeros are removed when the input value becomes a valid number.
  default: "true"
allowNegative:
  originalType: boolean
  group: General
  caption: Allow Negative
  description: If set, negative values are allowed
  default: "true"
allowedDecimalSeparators:
  originalType: string[]
  group: General
  caption: Allowed Decimal Separators
  description: Characters which when pressed result in a decimal separator
  default: "['.']"
clampBehavior:
  originalType: '"none" | "blur" | "strict"'
  group: General
  caption: Clamp Behavior
  description: Controls how value is clamped, strict – user is not allowed to
    enter values that are not in [min, max] range, blur – user is allowed to
    enter any values, but the value is clamped when the input loses focus
    (default behavior), none – lifts all restrictions, [min, max] range is
    applied only for controls and up/down keys
decimalScale:
  originalType: number
  group: General
  caption: Decimal Scale
  description: Limits the number of digits that can be entered after the decimal point
  default: Infinity
decimalSeparator:
  originalType: string
  group: General
  caption: Decimal Separator
  description: Character used as a decimal separator
  default: "'.'"
defaultValue:
  originalType: string | number
  group: General
  caption: Default Value
  description: Uncontrolled component default value
description:
  originalType: React.ReactNode
  group: General
  caption: Description
  description: Contents of Input.Description component. If not set, description is
    not displayed.
descriptionProps:
  originalType: (InputDescriptionProps & DataAttributes)
  group: General
  caption: Description Props
  description: Props passed down to the Input.Description component
disabled:
  originalType: boolean
  group: General
  caption: Disabled
  description: Sets disabled attribute on the input element
error:
  originalType: React.ReactNode
  group: General
  caption: Error
  description: Contents of Input.Error component. If not set, error is not displayed.
errorProps:
  originalType: (InputErrorProps & DataAttributes)
  group: General
  caption: Error Props
  description: Props passed down to the Input.Error component
fixedDecimalScale:
  originalType: boolean
  group: General
  caption: Fixed Decimal Scale
  description: If set, 0s are added after decimalSeparator to match given decimalScale.
  default: "false"
handlersRef:
  originalType: ForwardedRef<NumberInputHandlers> | undefined
  group: General
  caption: Handlers Ref
  description: Increment/decrement handlers
hideControls:
  originalType: boolean
  group: General
  caption: Hide Controls
  description: If set, the up/down controls are hidden
  default: "false"
inputContainer:
  originalType: "((children: ReactNode) => ReactNode)"
  group: General
  caption: Input Container
  description: Input container component
  default: React.Fragment
inputSize:
  originalType: string
  group: General
  caption: Input Size
  description: size attribute passed down to the input element
inputWrapperOrder:
  originalType: ("input" | "label" | "description" | "error")[]
  group: General
  caption: Input Wrapper Order
  description: Controls order of the elements
  default: "['label', 'description', 'input', 'error']"
isAllowed:
  originalType: "((values: NumberFormatValues) => boolean)"
  group: General
  caption: Is Allowed
  description: A function to validate the input value. If this function returns
    false, the onChange will not be called and the input value will not change.
label:
  originalType: React.ReactNode
  group: General
  caption: Label
  description: Contents of Input.Label component. If not set, label is not displayed.
labelProps:
  originalType: (InputLabelProps & DataAttributes)
  group: General
  caption: Label Props
  description: Props passed down to the Input.Label component
leftSection:
  originalType: React.ReactNode
  group: General
  caption: Left Section
  description: Content section displayed on the left side of the input
leftSectionPointerEvents:
  originalType: React.CSSProperties["pointerEvents"]
  group: General
  caption: Left Section Pointer Events
  description: Sets pointer-events styles on the leftSection element
  default: "'none'"
leftSectionProps:
  originalType: React.ComponentPropsWithoutRef<"div">
  group: General
  caption: Left Section Props
  description: Props passed down to the leftSection element
leftSectionWidth:
  originalType: React.CSSProperties["width"]
  group: General
  caption: Left Section Width
  description: Left section width, used to set width of the section and input
    padding-left, by default equals to the input height
max:
  originalType: number
  group: General
  caption: Max
  description: Maximum possible value
min:
  originalType: number
  group: General
  caption: Min
  description: Minimum possible value
onChange:
  originalType: "((value: string | number) => void)"
  group: General
  caption: On Change
  description: Called when value changes
onValueChange:
  originalType: OnValueChange
  group: General
  caption: On Value Change
  description: Called when value changes with react-number-format payload
pointer:
  originalType: boolean
  group: General
  caption: Pointer
  description: "Determines whether the input should have cursor: pointer style"
  default: "false"
prefix:
  originalType: string
  group: General
  caption: Prefix
  description: Prefix added before the input value
radius:
  originalType: MantineRadius | number
  group: General
  caption: Radius
  description: Key of theme.radius or any valid CSS value to set border-radius,
    numbers are converted to rem
  default: theme.defaultRadius
required:
  originalType: boolean
  group: General
  caption: Required
  description: Adds required attribute to the input and a red asterisk on the
    right side of label
  default: "false"
rightSection:
  originalType: React.ReactNode
  group: General
  caption: Right Section
  description: Content section displayed on the right side of the input
rightSectionPointerEvents:
  originalType: React.CSSProperties["pointerEvents"]
  group: General
  caption: Right Section Pointer Events
  description: Sets pointer-events styles on the rightSection element
  default: "'none'"
rightSectionProps:
  originalType: React.ComponentPropsWithoutRef<"div">
  group: General
  caption: Right Section Props
  description: Props passed down to the rightSection element
rightSectionWidth:
  originalType: React.CSSProperties["width"]
  group: General
  caption: Right Section Width
  description: Right section width, used to set width of the section and input
    padding-right, by default equals to the input height
size:
  originalType: MantineSize | (string & {})
  group: General
  caption: Size
  description: Controls input height and horizontal padding
  default: "'sm'"
startValue:
  originalType: number
  group: General
  caption: Start Value
  description: Value set to the input when increment/decrement buttons are clicked
    or up/down arrows pressed if the input is empty
  default: "0"
step:
  originalType: number
  group: General
  caption: Step
  description: Number by which value will be incremented/decremented with up/down
    controls and keyboard arrows
  default: "1"
stepHoldDelay:
  originalType: number
  group: General
  caption: Step Hold Delay
  description: Initial delay in milliseconds before stepping the value.
stepHoldInterval:
  originalType: "number | ((stepCount: number) => number)"
  group: General
  caption: Step Hold Interval
  description: Delay before stepping the value. Can be a number of milliseconds or
    a function that receives the current step count and returns the delay in
    milliseconds.
suffix:
  originalType: string
  group: General
  caption: Suffix
  description: Suffix added after the input value
thousandSeparator:
  originalType: string | boolean
  group: General
  caption: Thousand Separator
  description: A character used to separate thousands
thousandsGroupStyle:
  originalType: '"none" | "thousand" | "lakh" | "wan"'
  group: General
  caption: Thousands Group Style
  description: Defines the thousand grouping style.
trimLeadingZeroesOnBlur:
  originalType: boolean
  group: General
  caption: Trim Leading Zeroes On Blur
  description: If set, leading zeros are removed on blur. For example, 00100 -> 100
  default: "true"
type:
  originalType: '"text" | "tel" | "password"'
  group: General
  caption: Type
  description: Controls input type attribute
  default: "'text'"
value:
  originalType: string | number
  group: General
  caption: Value
  description: Controlled component value
valueIsNumericString:
  originalType: boolean
  group: General
  caption: Value Is Numeric String
  description: If value is passed as string representation of numbers
    (unformatted) and number is used in any format props like in prefix or
    suffix in numeric format and format prop in pattern format then this should
    be passed as true.
  default: "false"
withAsterisk:
  originalType: boolean
  group: General
  caption: With Asterisk
  description: If set, the required asterisk is displayed next to the label.
    Overrides required prop. Does not add required attribute to the input.
  default: "false"
withErrorStyles:
  originalType: boolean
  group: General
  caption: With Error Styles
  description: Determines whether the input should have red border and red text
    color when the error prop is set
  default: "true"
withKeyboardEvents:
  originalType: boolean
  group: General
  caption: With Keyboard Events
  description: If set, up/down keyboard events increment/decrement value
  default: "true"
wrapperProps:
  originalType: WrapperProps
  group: General
  caption: Wrapper Props
  description: Props passed down to the root element
